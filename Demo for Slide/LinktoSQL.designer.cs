#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Demo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLSP")]
	public partial class LinktoSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_HDTT(CT_HDTT instance);
    partial void UpdateCT_HDTT(CT_HDTT instance);
    partial void DeleteCT_HDTT(CT_HDTT instance);
    partial void InsertXuatSP(XuatSP instance);
    partial void UpdateXuatSP(XuatSP instance);
    partial void DeleteXuatSP(XuatSP instance);
    partial void InsertCT_HOPDONG(CT_HOPDONG instance);
    partial void UpdateCT_HOPDONG(CT_HOPDONG instance);
    partial void DeleteCT_HOPDONG(CT_HOPDONG instance);
    partial void InsertDATSP(DATSP instance);
    partial void UpdateDATSP(DATSP instance);
    partial void DeleteDATSP(DATSP instance);
    partial void InsertHDTT(HDTT instance);
    partial void UpdateHDTT(HDTT instance);
    partial void DeleteHDTT(HDTT instance);
    partial void InsertHOPDONG(HOPDONG instance);
    partial void UpdateHOPDONG(HOPDONG instance);
    partial void DeleteHOPDONG(HOPDONG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAISP(LOAISP instance);
    partial void UpdateLOAISP(LOAISP instance);
    partial void DeleteLOAISP(LOAISP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHAPSP(NHAPSP instance);
    partial void UpdateNHAPSP(NHAPSP instance);
    partial void DeleteNHAPSP(NHAPSP instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertQUYEN(QUYEN instance);
    partial void UpdateQUYEN(QUYEN instance);
    partial void DeleteQUYEN(QUYEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertSANPHAM1(SANPHAM1 instance);
    partial void UpdateSANPHAM1(SANPHAM1 instance);
    partial void DeleteSANPHAM1(SANPHAM1 instance);
    #endregion
		
		public LinktoSQLDataContext() : 
				base(global::Demo.Properties.Settings.Default.QLSPConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LinktoSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinktoSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinktoSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinktoSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_HDTT> CT_HDTTs
		{
			get
			{
				return this.GetTable<CT_HDTT>();
			}
		}
		
		public System.Data.Linq.Table<XuatSP> XuatSPs
		{
			get
			{
				return this.GetTable<XuatSP>();
			}
		}
		
		public System.Data.Linq.Table<CT_HOPDONG> CT_HOPDONGs
		{
			get
			{
				return this.GetTable<CT_HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<DATSP> DATSPs
		{
			get
			{
				return this.GetTable<DATSP>();
			}
		}
		
		public System.Data.Linq.Table<HDTT> HDTTs
		{
			get
			{
				return this.GetTable<HDTT>();
			}
		}
		
		public System.Data.Linq.Table<HOPDONG> HOPDONGs
		{
			get
			{
				return this.GetTable<HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAISP> LOAISPs
		{
			get
			{
				return this.GetTable<LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHAPSP> NHAPSPs
		{
			get
			{
				return this.GetTable<NHAPSP>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<QUYEN> QUYENs
		{
			get
			{
				return this.GetTable<QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM1> SANPHAM1s
		{
			get
			{
				return this.GetTable<SANPHAM1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HDTT")]
	public partial class CT_HDTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHD;
		
		private string _SoHDTT;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _SoLuongSPThue;
		
		private System.Nullable<int> _TraTruoc;
		
		private string _Lydo;
		
		private System.Nullable<int> _TongTienThanhToan;
		
		private EntityRef<HDTT> _HDTT;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDChanging(string value);
    partial void OnSoHDChanged();
    partial void OnSoHDTTChanging(string value);
    partial void OnSoHDTTChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnSoLuongSPThueChanging(System.Nullable<int> value);
    partial void OnSoLuongSPThueChanged();
    partial void OnTraTruocChanging(System.Nullable<int> value);
    partial void OnTraTruocChanged();
    partial void OnLydoChanging(string value);
    partial void OnLydoChanged();
    partial void OnTongTienThanhToanChanging(System.Nullable<int> value);
    partial void OnTongTienThanhToanChanged();
    #endregion
		
		public CT_HDTT()
		{
			this._HDTT = default(EntityRef<HDTT>);
			this._HOPDONG = default(EntityRef<HOPDONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHDTT", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHDTT
		{
			get
			{
				return this._SoHDTT;
			}
			set
			{
				if ((this._SoHDTT != value))
				{
					if (this._HDTT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDTTChanging(value);
					this.SendPropertyChanging();
					this._SoHDTT = value;
					this.SendPropertyChanged("SoHDTT");
					this.OnSoHDTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSPThue", DbType="Int")]
		public System.Nullable<int> SoLuongSPThue
		{
			get
			{
				return this._SoLuongSPThue;
			}
			set
			{
				if ((this._SoLuongSPThue != value))
				{
					this.OnSoLuongSPThueChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSPThue = value;
					this.SendPropertyChanged("SoLuongSPThue");
					this.OnSoLuongSPThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraTruoc", DbType="Int")]
		public System.Nullable<int> TraTruoc
		{
			get
			{
				return this._TraTruoc;
			}
			set
			{
				if ((this._TraTruoc != value))
				{
					this.OnTraTruocChanging(value);
					this.SendPropertyChanging();
					this._TraTruoc = value;
					this.SendPropertyChanged("TraTruoc");
					this.OnTraTruocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lydo", DbType="NVarChar(50)")]
		public string Lydo
		{
			get
			{
				return this._Lydo;
			}
			set
			{
				if ((this._Lydo != value))
				{
					this.OnLydoChanging(value);
					this.SendPropertyChanging();
					this._Lydo = value;
					this.SendPropertyChanged("Lydo");
					this.OnLydoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTienThanhToan", DbType="Int")]
		public System.Nullable<int> TongTienThanhToan
		{
			get
			{
				return this._TongTienThanhToan;
			}
			set
			{
				if ((this._TongTienThanhToan != value))
				{
					this.OnTongTienThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TongTienThanhToan = value;
					this.SendPropertyChanged("TongTienThanhToan");
					this.OnTongTienThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDTT_CT_HDTT", Storage="_HDTT", ThisKey="SoHDTT", OtherKey="SoHDTT", IsForeignKey=true)]
		public HDTT HDTT
		{
			get
			{
				return this._HDTT.Entity;
			}
			set
			{
				HDTT previousValue = this._HDTT.Entity;
				if (((previousValue != value) 
							|| (this._HDTT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDTT.Entity = null;
						previousValue.CT_HDTTs.Remove(this);
					}
					this._HDTT.Entity = value;
					if ((value != null))
					{
						value.CT_HDTTs.Add(this);
						this._SoHDTT = value.SoHDTT;
					}
					else
					{
						this._SoHDTT = default(string);
					}
					this.SendPropertyChanged("HDTT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CT_HDTT", Storage="_HOPDONG", ThisKey="SoHD", OtherKey="SoHD", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.CT_HDTTs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.CT_HDTTs.Add(this);
						this._SoHD = value.SoHD;
					}
					else
					{
						this._SoHD = default(string);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XuatSP")]
	public partial class XuatSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayXuat;
		
		private string _GhiChu;
		
		private string _MaSP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<SANPHAM1> _SANPHAM1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayXuatChanging(System.DateTime value);
    partial void OnNgayXuatChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public XuatSP()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._SANPHAM1 = default(EntityRef<SANPHAM1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuat", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayXuat
		{
			get
			{
				return this._NgayXuat;
			}
			set
			{
				if ((this._NgayXuat != value))
				{
					this.OnNgayXuatChanging(value);
					this.SendPropertyChanging();
					this._NgayXuat = value;
					this.SendPropertyChanged("NgayXuat");
					this.OnNgayXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(25)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if ((this._SANPHAM.HasLoadedOrAssignedValue || this._SANPHAM1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_XuatSP", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.XuatSPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.XuatSPs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM1_XuatSP", Storage="_SANPHAM1", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM1 SANPHAM1
		{
			get
			{
				return this._SANPHAM1.Entity;
			}
			set
			{
				SANPHAM1 previousValue = this._SANPHAM1.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM1.Entity = null;
						previousValue.XuatSPs.Remove(this);
					}
					this._SANPHAM1.Entity = value;
					if ((value != null))
					{
						value.XuatSPs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HOPDONG")]
	public partial class CT_HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSP;
		
		private string _SoHD;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<System.DateTime> _NgayNhan;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Nullable<int> _Gia;
		
		private string _GhiChu;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnSoHDChanging(string value);
    partial void OnSoHDChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnNgayNhanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhanChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public CT_HOPDONG()
		{
			this._HOPDONG = default(EntityRef<HOPDONG>);
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhan
		{
			get
			{
				return this._NgayNhan;
			}
			set
			{
				if ((this._NgayNhan != value))
				{
					this.OnNgayNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayNhan = value;
					this.SendPropertyChanged("NgayNhan");
					this.OnNgayNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(25)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CT_HOPDONG", Storage="_HOPDONG", ThisKey="SoHD", OtherKey="SoHD", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.CT_HOPDONGs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.CT_HOPDONGs.Add(this);
						this._SoHD = value.SoHD;
					}
					else
					{
						this._SoHD = default(string);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CT_HOPDONG", Storage="_LOAISP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.CT_HOPDONGs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.CT_HOPDONGs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATSP")]
	public partial class DATSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayHenDat;
		
		private System.Nullable<int> _SoLuongDat;
		
		private System.Nullable<System.DateTime> _NgayHenLay;
		
		private string _TinhTrang;
		
		private string _MaLoaiSP;
		
		private string _CMND;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayHenDatChanging(System.DateTime value);
    partial void OnNgayHenDatChanged();
    partial void OnSoLuongDatChanging(System.Nullable<int> value);
    partial void OnSoLuongDatChanged();
    partial void OnNgayHenLayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHenLayChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public DATSP()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHenDat", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayHenDat
		{
			get
			{
				return this._NgayHenDat;
			}
			set
			{
				if ((this._NgayHenDat != value))
				{
					this.OnNgayHenDatChanging(value);
					this.SendPropertyChanging();
					this._NgayHenDat = value;
					this.SendPropertyChanged("NgayHenDat");
					this.OnNgayHenDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDat", DbType="Int")]
		public System.Nullable<int> SoLuongDat
		{
			get
			{
				return this._SoLuongDat;
			}
			set
			{
				if ((this._SoLuongDat != value))
				{
					this.OnSoLuongDatChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDat = value;
					this.SendPropertyChanged("SoLuongDat");
					this.OnSoLuongDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHenLay", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHenLay
		{
			get
			{
				return this._NgayHenLay;
			}
			set
			{
				if ((this._NgayHenLay != value))
				{
					this.OnNgayHenLayChanging(value);
					this.SendPropertyChanging();
					this._NgayHenLay = value;
					this.SendPropertyChanged("NgayHenLay");
					this.OnNgayHenLayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATSP", Storage="_KHACHHANG", ThisKey="CMND", OtherKey="CMND", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DATSPs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DATSPs.Add(this);
						this._CMND = value.CMND;
					}
					else
					{
						this._CMND = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_DATSP", Storage="_LOAISP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.DATSPs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.DATSPs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HDTT")]
	public partial class HDTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHDTT;
		
		private System.Nullable<System.DateTime> _NgayNhan;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Nullable<int> _ThanhTien;
		
		private string _MaSP;
		
		private EntitySet<CT_HDTT> _CT_HDTTs;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<SANPHAM1> _SANPHAM1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDTTChanging(string value);
    partial void OnSoHDTTChanged();
    partial void OnNgayNhanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhanChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public HDTT()
		{
			this._CT_HDTTs = new EntitySet<CT_HDTT>(new Action<CT_HDTT>(this.attach_CT_HDTTs), new Action<CT_HDTT>(this.detach_CT_HDTTs));
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._SANPHAM1 = default(EntityRef<SANPHAM1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHDTT", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHDTT
		{
			get
			{
				return this._SoHDTT;
			}
			set
			{
				if ((this._SoHDTT != value))
				{
					this.OnSoHDTTChanging(value);
					this.SendPropertyChanging();
					this._SoHDTT = value;
					this.SendPropertyChanged("SoHDTT");
					this.OnSoHDTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhan
		{
			get
			{
				return this._NgayNhan;
			}
			set
			{
				if ((this._NgayNhan != value))
				{
					this.OnNgayNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayNhan = value;
					this.SendPropertyChanged("NgayNhan");
					this.OnNgayNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if ((this._SANPHAM.HasLoadedOrAssignedValue || this._SANPHAM1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDTT_CT_HDTT", Storage="_CT_HDTTs", ThisKey="SoHDTT", OtherKey="SoHDTT")]
		public EntitySet<CT_HDTT> CT_HDTTs
		{
			get
			{
				return this._CT_HDTTs;
			}
			set
			{
				this._CT_HDTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HDTT", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.HDTTs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.HDTTs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM1_HDTT", Storage="_SANPHAM1", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM1 SANPHAM1
		{
			get
			{
				return this._SANPHAM1.Entity;
			}
			set
			{
				SANPHAM1 previousValue = this._SANPHAM1.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM1.Entity = null;
						previousValue.HDTTs.Remove(this);
					}
					this._SANPHAM1.Entity = value;
					if ((value != null))
					{
						value.HDTTs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HDTT = this;
		}
		
		private void detach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HDTT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _TienTamUng;
		
		private EntitySet<CT_HDTT> _CT_HDTTs;
		
		private EntitySet<CT_HOPDONG> _CT_HOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDChanging(string value);
    partial void OnSoHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnTienTamUngChanging(System.Nullable<int> value);
    partial void OnTienTamUngChanged();
    #endregion
		
		public HOPDONG()
		{
			this._CT_HDTTs = new EntitySet<CT_HDTT>(new Action<CT_HDTT>(this.attach_CT_HDTTs), new Action<CT_HDTT>(this.detach_CT_HDTTs));
			this._CT_HOPDONGs = new EntitySet<CT_HOPDONG>(new Action<CT_HOPDONG>(this.attach_CT_HOPDONGs), new Action<CT_HOPDONG>(this.detach_CT_HOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienTamUng", DbType="Int")]
		public System.Nullable<int> TienTamUng
		{
			get
			{
				return this._TienTamUng;
			}
			set
			{
				if ((this._TienTamUng != value))
				{
					this.OnTienTamUngChanging(value);
					this.SendPropertyChanging();
					this._TienTamUng = value;
					this.SendPropertyChanged("TienTamUng");
					this.OnTienTamUngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CT_HDTT", Storage="_CT_HDTTs", ThisKey="SoHD", OtherKey="SoHD")]
		public EntitySet<CT_HDTT> CT_HDTTs
		{
			get
			{
				return this._CT_HDTTs;
			}
			set
			{
				this._CT_HDTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CT_HOPDONG", Storage="_CT_HOPDONGs", ThisKey="SoHD", OtherKey="SoHD")]
		public EntitySet<CT_HOPDONG> CT_HOPDONGs
		{
			get
			{
				return this._CT_HOPDONGs;
			}
			set
			{
				this._CT_HOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
		
		private void attach_CT_HOPDONGs(CT_HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_CT_HOPDONGs(CT_HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CMND;
		
		private string _HoTenKH;
		
		private string _DiaChiKH;
		
		private string _DIenThoaiKH;
		
		private EntitySet<DATSP> _DATSPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    partial void OnDIenThoaiKHChanging(string value);
    partial void OnDIenThoaiKHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DATSPs = new EntitySet<DATSP>(new Action<DATSP>(this.attach_DATSPs), new Action<DATSP>(this.detach_DATSPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="NVarChar(20)")]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(50)")]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIenThoaiKH", DbType="VarChar(15)")]
		public string DIenThoaiKH
		{
			get
			{
				return this._DIenThoaiKH;
			}
			set
			{
				if ((this._DIenThoaiKH != value))
				{
					this.OnDIenThoaiKHChanging(value);
					this.SendPropertyChanging();
					this._DIenThoaiKH = value;
					this.SendPropertyChanged("DIenThoaiKH");
					this.OnDIenThoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATSP", Storage="_DATSPs", ThisKey="CMND", OtherKey="CMND")]
		public EntitySet<DATSP> DATSPs
		{
			get
			{
				return this._DATSPs;
			}
			set
			{
				this._DATSPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATSPs(DATSP entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DATSPs(DATSP entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISP")]
	public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private System.Nullable<int> _SoLuongSP;
		
		private EntitySet<CT_HOPDONG> _CT_HOPDONGs;
		
		private EntitySet<DATSP> _DATSPs;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntitySet<SANPHAM1> _SANPHAM1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    partial void OnSoLuongSPChanging(System.Nullable<int> value);
    partial void OnSoLuongSPChanged();
    #endregion
		
		public LOAISP()
		{
			this._CT_HOPDONGs = new EntitySet<CT_HOPDONG>(new Action<CT_HOPDONG>(this.attach_CT_HOPDONGs), new Action<CT_HOPDONG>(this.detach_CT_HOPDONGs));
			this._DATSPs = new EntitySet<DATSP>(new Action<DATSP>(this.attach_DATSPs), new Action<DATSP>(this.detach_DATSPs));
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._SANPHAM1s = new EntitySet<SANPHAM1>(new Action<SANPHAM1>(this.attach_SANPHAM1s), new Action<SANPHAM1>(this.detach_SANPHAM1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(20)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSP", DbType="Int")]
		public System.Nullable<int> SoLuongSP
		{
			get
			{
				return this._SoLuongSP;
			}
			set
			{
				if ((this._SoLuongSP != value))
				{
					this.OnSoLuongSPChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSP = value;
					this.SendPropertyChanged("SoLuongSP");
					this.OnSoLuongSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CT_HOPDONG", Storage="_CT_HOPDONGs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<CT_HOPDONG> CT_HOPDONGs
		{
			get
			{
				return this._CT_HOPDONGs;
			}
			set
			{
				this._CT_HOPDONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_DATSP", Storage="_DATSPs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<DATSP> DATSPs
		{
			get
			{
				return this._DATSPs;
			}
			set
			{
				this._DATSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_SANPHAMs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM1", Storage="_SANPHAM1s", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SANPHAM1> SANPHAM1s
		{
			get
			{
				return this._SANPHAM1s;
			}
			set
			{
				this._SANPHAM1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOPDONGs(CT_HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_CT_HOPDONGs(CT_HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_DATSPs(DATSP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_DATSPs(DATSP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_SANPHAM1s(SANPHAM1 entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_SANPHAM1s(SANPHAM1 entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenDangNhap;
		
		private string _HoTenNV;
		
		private string _TenDayDu;
		
		private string _MatKhau;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnTenDayDuChanging(string value);
    partial void OnTenDayDuChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(20)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="VarChar(20)")]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDayDu", DbType="NVarChar(20)")]
		public string TenDayDu
		{
			get
			{
				return this._TenDayDu;
			}
			set
			{
				if ((this._TenDayDu != value))
				{
					this.OnTenDayDuChanging(value);
					this.SendPropertyChanging();
					this._TenDayDu = value;
					this.SendPropertyChanged("TenDayDu");
					this.OnTenDayDuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAPSP")]
	public partial class NHAPSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayNhap;
		
		private string _GhiChu;
		
		private string _MaSP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<SANPHAM1> _SANPHAM1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public NHAPSP()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._SANPHAM1 = default(EntityRef<SANPHAM1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(25)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if ((this._SANPHAM.HasLoadedOrAssignedValue || this._SANPHAM1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NHAPSP", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.NHAPSPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.NHAPSPs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM1_NHAPSP", Storage="_SANPHAM1", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM1 SANPHAM1
		{
			get
			{
				return this._SANPHAM1.Entity;
			}
			set
			{
				SANPHAM1 previousValue = this._SANPHAM1.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM1.Entity = null;
						previousValue.NHAPSPs.Remove(this);
					}
					this._SANPHAM1.Entity = value;
					if ((value != null))
					{
						value.NHAPSPs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDQUYEN;
		
		private string _MaNV;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<QUYEN> _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDQUYENChanging(string value);
    partial void OnIDQUYENChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._QUYEN = default(EntityRef<QUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQUYEN", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDQUYEN
		{
			get
			{
				return this._IDQUYEN;
			}
			set
			{
				if ((this._IDQUYEN != value))
				{
					if (this._QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDQUYENChanging(value);
					this.SendPropertyChanging();
					this._IDQUYEN = value;
					this.SendPropertyChanged("IDQUYEN");
					this.OnIDQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANQUYEN", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_PHANQUYEN", Storage="_QUYEN", ThisKey="IDQUYEN", OtherKey="IDQUYEN", IsForeignKey=true)]
		public QUYEN QUYEN
		{
			get
			{
				return this._QUYEN.Entity;
			}
			set
			{
				QUYEN previousValue = this._QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUYEN.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._QUYEN.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._IDQUYEN = value.IDQUYEN;
					}
					else
					{
						this._IDQUYEN = default(string);
					}
					this.SendPropertyChanged("QUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUYEN")]
	public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDQUYEN;
		
		private string _TenQuyen;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDQUYENChanging(string value);
    partial void OnIDQUYENChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public QUYEN()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQUYEN", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDQUYEN
		{
			get
			{
				return this._IDQUYEN;
			}
			set
			{
				if ((this._IDQUYEN != value))
				{
					this.OnIDQUYENChanging(value);
					this.SendPropertyChanging();
					this._IDQUYEN = value;
					this.SendPropertyChanged("IDQUYEN");
					this.OnIDQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(10)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="IDQUYEN", OtherKey="IDQUYEN")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _MoTa;
		
		private string _TinhTrang;
		
		private string _MaLoaiSP;
		
		private EntitySet<XuatSP> _XuatSPs;
		
		private EntitySet<HDTT> _HDTTs;
		
		private EntitySet<NHAPSP> _NHAPSPs;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    #endregion
		
		public SANPHAM()
		{
			this._XuatSPs = new EntitySet<XuatSP>(new Action<XuatSP>(this.attach_XuatSPs), new Action<XuatSP>(this.detach_XuatSPs));
			this._HDTTs = new EntitySet<HDTT>(new Action<HDTT>(this.attach_HDTTs), new Action<HDTT>(this.detach_HDTTs));
			this._NHAPSPs = new EntitySet<NHAPSP>(new Action<NHAPSP>(this.attach_NHAPSPs), new Action<NHAPSP>(this.detach_NHAPSPs));
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_XuatSP", Storage="_XuatSPs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<XuatSP> XuatSPs
		{
			get
			{
				return this._XuatSPs;
			}
			set
			{
				this._XuatSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HDTT", Storage="_HDTTs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<HDTT> HDTTs
		{
			get
			{
				return this._HDTTs;
			}
			set
			{
				this._HDTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NHAPSP", Storage="_NHAPSPs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<NHAPSP> NHAPSPs
		{
			get
			{
				return this._NHAPSPs;
			}
			set
			{
				this._NHAPSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_LOAISP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XuatSPs(XuatSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_XuatSPs(XuatSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_HDTTs(HDTT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_HDTTs(HDTT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_NHAPSPs(NHAPSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_NHAPSPs(NHAPSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _MoTa;
		
		private string _TinhTrang;
		
		private string _MaLoaiSP;
		
		private EntitySet<XuatSP> _XuatSPs;
		
		private EntitySet<HDTT> _HDTTs;
		
		private EntitySet<NHAPSP> _NHAPSPs;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    #endregion
		
		public SANPHAM1()
		{
			this._XuatSPs = new EntitySet<XuatSP>(new Action<XuatSP>(this.attach_XuatSPs), new Action<XuatSP>(this.detach_XuatSPs));
			this._HDTTs = new EntitySet<HDTT>(new Action<HDTT>(this.attach_HDTTs), new Action<HDTT>(this.detach_HDTTs));
			this._NHAPSPs = new EntitySet<NHAPSP>(new Action<NHAPSP>(this.attach_NHAPSPs), new Action<NHAPSP>(this.detach_NHAPSPs));
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM1_XuatSP", Storage="_XuatSPs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<XuatSP> XuatSPs
		{
			get
			{
				return this._XuatSPs;
			}
			set
			{
				this._XuatSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM1_HDTT", Storage="_HDTTs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<HDTT> HDTTs
		{
			get
			{
				return this._HDTTs;
			}
			set
			{
				this._HDTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM1_NHAPSP", Storage="_NHAPSPs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<NHAPSP> NHAPSPs
		{
			get
			{
				return this._NHAPSPs;
			}
			set
			{
				this._NHAPSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM1", Storage="_LOAISP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.SANPHAM1s.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.SANPHAM1s.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XuatSPs(XuatSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = this;
		}
		
		private void detach_XuatSPs(XuatSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = null;
		}
		
		private void attach_HDTTs(HDTT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = this;
		}
		
		private void detach_HDTTs(HDTT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = null;
		}
		
		private void attach_NHAPSPs(NHAPSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = this;
		}
		
		private void detach_NHAPSPs(NHAPSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = null;
		}
	}
}
#pragma warning restore 1591
