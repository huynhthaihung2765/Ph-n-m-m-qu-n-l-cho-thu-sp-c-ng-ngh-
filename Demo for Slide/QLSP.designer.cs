#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Demo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLThueSP")]
	public partial class QLSPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_HDTT(CT_HDTT instance);
    partial void UpdateCT_HDTT(CT_HDTT instance);
    partial void DeleteCT_HDTT(CT_HDTT instance);
    partial void InsertSPVao(SPVao instance);
    partial void UpdateSPVao(SPVao instance);
    partial void DeleteSPVao(SPVao instance);
    partial void InsertCTHopDong(CTHopDong instance);
    partial void UpdateCTHopDong(CTHopDong instance);
    partial void DeleteCTHopDong(CTHopDong instance);
    partial void InsertDatSP(DatSP instance);
    partial void UpdateDatSP(DatSP instance);
    partial void DeleteDatSP(DatSP instance);
    partial void InsertHDTT(HDTT instance);
    partial void UpdateHDTT(HDTT instance);
    partial void DeleteHDTT(HDTT instance);
    partial void InsertHopDong(HopDong instance);
    partial void UpdateHopDong(HopDong instance);
    partial void DeleteHopDong(HopDong instance);
    partial void InsertKHACH(KHACH instance);
    partial void UpdateKHACH(KHACH instance);
    partial void DeleteKHACH(KHACH instance);
    partial void InsertLOAISP(LOAISP instance);
    partial void UpdateLOAISP(LOAISP instance);
    partial void DeleteLOAISP(LOAISP instance);
    partial void InsertSP(SP instance);
    partial void UpdateSP(SP instance);
    partial void DeleteSP(SP instance);
    partial void InsertSPRa(SPRa instance);
    partial void UpdateSPRa(SPRa instance);
    partial void DeleteSPRa(SPRa instance);
    #endregion
		
		public QLSPDataContext() : 
				base(global::Demo.Properties.Settings.Default.QLThueSPConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QLSPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_HDTT> CT_HDTTs
		{
			get
			{
				return this.GetTable<CT_HDTT>();
			}
		}
		
		public System.Data.Linq.Table<SPVao> SPVaos
		{
			get
			{
				return this.GetTable<SPVao>();
			}
		}
		
		public System.Data.Linq.Table<CTHopDong> CTHopDongs
		{
			get
			{
				return this.GetTable<CTHopDong>();
			}
		}
		
		public System.Data.Linq.Table<DatSP> DatSPs
		{
			get
			{
				return this.GetTable<DatSP>();
			}
		}
		
		public System.Data.Linq.Table<HDTT> HDTTs
		{
			get
			{
				return this.GetTable<HDTT>();
			}
		}
		
		public System.Data.Linq.Table<HopDong> HopDongs
		{
			get
			{
				return this.GetTable<HopDong>();
			}
		}
		
		public System.Data.Linq.Table<KHACH> KHACHes
		{
			get
			{
				return this.GetTable<KHACH>();
			}
		}
		
		public System.Data.Linq.Table<LOAISP> LOAISPs
		{
			get
			{
				return this.GetTable<LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<SP> SPs
		{
			get
			{
				return this.GetTable<SP>();
			}
		}
		
		public System.Data.Linq.Table<SPRa> SPRas
		{
			get
			{
				return this.GetTable<SPRa>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HDTT")]
	public partial class CT_HDTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHD;
		
		private string _SoHDTT;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _SoLuongSPThue;
		
		private System.Nullable<int> _TraTruoc;
		
		private string _Lydo;
		
		private System.Nullable<int> _TongTienThanhToan;
		
		private EntityRef<HDTT> _HDTT;
		
		private EntityRef<HopDong> _HopDong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDChanging(string value);
    partial void OnSoHDChanged();
    partial void OnSoHDTTChanging(string value);
    partial void OnSoHDTTChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnSoLuongSPThueChanging(System.Nullable<int> value);
    partial void OnSoLuongSPThueChanged();
    partial void OnTraTruocChanging(System.Nullable<int> value);
    partial void OnTraTruocChanged();
    partial void OnLydoChanging(string value);
    partial void OnLydoChanged();
    partial void OnTongTienThanhToanChanging(System.Nullable<int> value);
    partial void OnTongTienThanhToanChanged();
    #endregion
		
		public CT_HDTT()
		{
			this._HDTT = default(EntityRef<HDTT>);
			this._HopDong = default(EntityRef<HopDong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					if (this._HopDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHDTT", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHDTT
		{
			get
			{
				return this._SoHDTT;
			}
			set
			{
				if ((this._SoHDTT != value))
				{
					if (this._HDTT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDTTChanging(value);
					this.SendPropertyChanging();
					this._SoHDTT = value;
					this.SendPropertyChanged("SoHDTT");
					this.OnSoHDTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSPThue", DbType="Int")]
		public System.Nullable<int> SoLuongSPThue
		{
			get
			{
				return this._SoLuongSPThue;
			}
			set
			{
				if ((this._SoLuongSPThue != value))
				{
					this.OnSoLuongSPThueChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSPThue = value;
					this.SendPropertyChanged("SoLuongSPThue");
					this.OnSoLuongSPThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraTruoc", DbType="Int")]
		public System.Nullable<int> TraTruoc
		{
			get
			{
				return this._TraTruoc;
			}
			set
			{
				if ((this._TraTruoc != value))
				{
					this.OnTraTruocChanging(value);
					this.SendPropertyChanging();
					this._TraTruoc = value;
					this.SendPropertyChanged("TraTruoc");
					this.OnTraTruocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lydo", DbType="NVarChar(50)")]
		public string Lydo
		{
			get
			{
				return this._Lydo;
			}
			set
			{
				if ((this._Lydo != value))
				{
					this.OnLydoChanging(value);
					this.SendPropertyChanging();
					this._Lydo = value;
					this.SendPropertyChanged("Lydo");
					this.OnLydoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTienThanhToan", DbType="Int")]
		public System.Nullable<int> TongTienThanhToan
		{
			get
			{
				return this._TongTienThanhToan;
			}
			set
			{
				if ((this._TongTienThanhToan != value))
				{
					this.OnTongTienThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TongTienThanhToan = value;
					this.SendPropertyChanged("TongTienThanhToan");
					this.OnTongTienThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDTT_CT_HDTT", Storage="_HDTT", ThisKey="SoHDTT", OtherKey="SoHDTT", IsForeignKey=true)]
		public HDTT HDTT
		{
			get
			{
				return this._HDTT.Entity;
			}
			set
			{
				HDTT previousValue = this._HDTT.Entity;
				if (((previousValue != value) 
							|| (this._HDTT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDTT.Entity = null;
						previousValue.CT_HDTTs.Remove(this);
					}
					this._HDTT.Entity = value;
					if ((value != null))
					{
						value.CT_HDTTs.Add(this);
						this._SoHDTT = value.SoHDTT;
					}
					else
					{
						this._SoHDTT = default(string);
					}
					this.SendPropertyChanged("HDTT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_CT_HDTT", Storage="_HopDong", ThisKey="SoHD", OtherKey="SoHD", IsForeignKey=true)]
		public HopDong HopDong
		{
			get
			{
				return this._HopDong.Entity;
			}
			set
			{
				HopDong previousValue = this._HopDong.Entity;
				if (((previousValue != value) 
							|| (this._HopDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HopDong.Entity = null;
						previousValue.CT_HDTTs.Remove(this);
					}
					this._HopDong.Entity = value;
					if ((value != null))
					{
						value.CT_HDTTs.Add(this);
						this._SoHD = value.SoHD;
					}
					else
					{
						this._SoHD = default(string);
					}
					this.SendPropertyChanged("HopDong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPVao")]
	public partial class SPVao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayVao;
		
		private string _GhiChu;
		
		private EntitySet<SP> _SPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayVaoChanging(System.DateTime value);
    partial void OnNgayVaoChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public SPVao()
		{
			this._SPs = new EntitySet<SP>(new Action<SP>(this.attach_SPs), new Action<SP>(this.detach_SPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVao", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayVao
		{
			get
			{
				return this._NgayVao;
			}
			set
			{
				if ((this._NgayVao != value))
				{
					this.OnNgayVaoChanging(value);
					this.SendPropertyChanging();
					this._NgayVao = value;
					this.SendPropertyChanged("NgayVao");
					this.OnNgayVaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(25)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPVao_SP", Storage="_SPs", ThisKey="NgayVao", OtherKey="NgayVao")]
		public EntitySet<SP> SPs
		{
			get
			{
				return this._SPs;
			}
			set
			{
				this._SPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.SPVao = this;
		}
		
		private void detach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.SPVao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHopDong")]
	public partial class CTHopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSP;
		
		private string _SoHD;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<System.DateTime> _NgayNhan;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Nullable<int> _Gia;
		
		private string _GhiChu;
		
		private EntityRef<HopDong> _HopDong;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnSoHDChanging(string value);
    partial void OnSoHDChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnNgayNhanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhanChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public CTHopDong()
		{
			this._HopDong = default(EntityRef<HopDong>);
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					if (this._HopDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhan
		{
			get
			{
				return this._NgayNhan;
			}
			set
			{
				if ((this._NgayNhan != value))
				{
					this.OnNgayNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayNhan = value;
					this.SendPropertyChanged("NgayNhan");
					this.OnNgayNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(25)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_CTHopDong", Storage="_HopDong", ThisKey="SoHD", OtherKey="SoHD", IsForeignKey=true)]
		public HopDong HopDong
		{
			get
			{
				return this._HopDong.Entity;
			}
			set
			{
				HopDong previousValue = this._HopDong.Entity;
				if (((previousValue != value) 
							|| (this._HopDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HopDong.Entity = null;
						previousValue.CTHopDongs.Remove(this);
					}
					this._HopDong.Entity = value;
					if ((value != null))
					{
						value.CTHopDongs.Add(this);
						this._SoHD = value.SoHD;
					}
					else
					{
						this._SoHD = default(string);
					}
					this.SendPropertyChanged("HopDong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CTHopDong", Storage="_LOAISP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.CTHopDongs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.CTHopDongs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatSP")]
	public partial class DatSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayHenDat;
		
		private System.Nullable<int> _SoLuongDat;
		
		private System.Nullable<System.DateTime> _NgayHenLay;
		
		private string _TinhTrang;
		
		private string _MaLoaiSP;
		
		private string _CMND;
		
		private EntityRef<KHACH> _KHACH;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayHenDatChanging(System.DateTime value);
    partial void OnNgayHenDatChanged();
    partial void OnSoLuongDatChanging(System.Nullable<int> value);
    partial void OnSoLuongDatChanged();
    partial void OnNgayHenLayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHenLayChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public DatSP()
		{
			this._KHACH = default(EntityRef<KHACH>);
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHenDat", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayHenDat
		{
			get
			{
				return this._NgayHenDat;
			}
			set
			{
				if ((this._NgayHenDat != value))
				{
					this.OnNgayHenDatChanging(value);
					this.SendPropertyChanging();
					this._NgayHenDat = value;
					this.SendPropertyChanged("NgayHenDat");
					this.OnNgayHenDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDat", DbType="Int")]
		public System.Nullable<int> SoLuongDat
		{
			get
			{
				return this._SoLuongDat;
			}
			set
			{
				if ((this._SoLuongDat != value))
				{
					this.OnSoLuongDatChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDat = value;
					this.SendPropertyChanged("SoLuongDat");
					this.OnSoLuongDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHenLay", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHenLay
		{
			get
			{
				return this._NgayHenLay;
			}
			set
			{
				if ((this._NgayHenLay != value))
				{
					this.OnNgayHenLayChanging(value);
					this.SendPropertyChanging();
					this._NgayHenLay = value;
					this.SendPropertyChanged("NgayHenLay");
					this.OnNgayHenLayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					if (this._KHACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_DatSP", Storage="_KHACH", ThisKey="CMND", OtherKey="CMND", IsForeignKey=true)]
		public KHACH KHACH
		{
			get
			{
				return this._KHACH.Entity;
			}
			set
			{
				KHACH previousValue = this._KHACH.Entity;
				if (((previousValue != value) 
							|| (this._KHACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACH.Entity = null;
						previousValue.DatSPs.Remove(this);
					}
					this._KHACH.Entity = value;
					if ((value != null))
					{
						value.DatSPs.Add(this);
						this._CMND = value.CMND;
					}
					else
					{
						this._CMND = default(string);
					}
					this.SendPropertyChanged("KHACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_DatSP", Storage="_LOAISP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.DatSPs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.DatSPs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HDTT")]
	public partial class HDTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHDTT;
		
		private System.Nullable<System.DateTime> _NgayNhan;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntitySet<CT_HDTT> _CT_HDTTs;
		
		private EntitySet<SP> _SPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDTTChanging(string value);
    partial void OnSoHDTTChanged();
    partial void OnNgayNhanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhanChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public HDTT()
		{
			this._CT_HDTTs = new EntitySet<CT_HDTT>(new Action<CT_HDTT>(this.attach_CT_HDTTs), new Action<CT_HDTT>(this.detach_CT_HDTTs));
			this._SPs = new EntitySet<SP>(new Action<SP>(this.attach_SPs), new Action<SP>(this.detach_SPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHDTT", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHDTT
		{
			get
			{
				return this._SoHDTT;
			}
			set
			{
				if ((this._SoHDTT != value))
				{
					this.OnSoHDTTChanging(value);
					this.SendPropertyChanging();
					this._SoHDTT = value;
					this.SendPropertyChanged("SoHDTT");
					this.OnSoHDTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhan
		{
			get
			{
				return this._NgayNhan;
			}
			set
			{
				if ((this._NgayNhan != value))
				{
					this.OnNgayNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayNhan = value;
					this.SendPropertyChanged("NgayNhan");
					this.OnNgayNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDTT_CT_HDTT", Storage="_CT_HDTTs", ThisKey="SoHDTT", OtherKey="SoHDTT")]
		public EntitySet<CT_HDTT> CT_HDTTs
		{
			get
			{
				return this._CT_HDTTs;
			}
			set
			{
				this._CT_HDTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDTT_SP", Storage="_SPs", ThisKey="SoHDTT", OtherKey="SoHDTT")]
		public EntitySet<SP> SPs
		{
			get
			{
				return this._SPs;
			}
			set
			{
				this._SPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HDTT = this;
		}
		
		private void detach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HDTT = null;
		}
		
		private void attach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.HDTT = this;
		}
		
		private void detach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.HDTT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HopDong")]
	public partial class HopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _TienTamUng;
		
		private EntitySet<CT_HDTT> _CT_HDTTs;
		
		private EntitySet<CTHopDong> _CTHopDongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDChanging(string value);
    partial void OnSoHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnTienTamUngChanging(System.Nullable<int> value);
    partial void OnTienTamUngChanged();
    #endregion
		
		public HopDong()
		{
			this._CT_HDTTs = new EntitySet<CT_HDTT>(new Action<CT_HDTT>(this.attach_CT_HDTTs), new Action<CT_HDTT>(this.detach_CT_HDTTs));
			this._CTHopDongs = new EntitySet<CTHopDong>(new Action<CTHopDong>(this.attach_CTHopDongs), new Action<CTHopDong>(this.detach_CTHopDongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienTamUng", DbType="Int")]
		public System.Nullable<int> TienTamUng
		{
			get
			{
				return this._TienTamUng;
			}
			set
			{
				if ((this._TienTamUng != value))
				{
					this.OnTienTamUngChanging(value);
					this.SendPropertyChanging();
					this._TienTamUng = value;
					this.SendPropertyChanged("TienTamUng");
					this.OnTienTamUngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_CT_HDTT", Storage="_CT_HDTTs", ThisKey="SoHD", OtherKey="SoHD")]
		public EntitySet<CT_HDTT> CT_HDTTs
		{
			get
			{
				return this._CT_HDTTs;
			}
			set
			{
				this._CT_HDTTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_CTHopDong", Storage="_CTHopDongs", ThisKey="SoHD", OtherKey="SoHD")]
		public EntitySet<CTHopDong> CTHopDongs
		{
			get
			{
				return this._CTHopDongs;
			}
			set
			{
				this._CTHopDongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = this;
		}
		
		private void detach_CT_HDTTs(CT_HDTT entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = null;
		}
		
		private void attach_CTHopDongs(CTHopDong entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = this;
		}
		
		private void detach_CTHopDongs(CTHopDong entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACH")]
	public partial class KHACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CMND;
		
		private string _TenKH;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _SoTK;
		
		private string _TenNganHang;
		
		private EntitySet<DatSP> _DatSPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnSoTKChanging(string value);
    partial void OnSoTKChanged();
    partial void OnTenNganHangChanging(string value);
    partial void OnTenNganHangChanged();
    #endregion
		
		public KHACH()
		{
			this._DatSPs = new EntitySet<DatSP>(new Action<DatSP>(this.attach_DatSPs), new Action<DatSP>(this.detach_DatSPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(20)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTK", DbType="VarChar(20)")]
		public string SoTK
		{
			get
			{
				return this._SoTK;
			}
			set
			{
				if ((this._SoTK != value))
				{
					this.OnSoTKChanging(value);
					this.SendPropertyChanging();
					this._SoTK = value;
					this.SendPropertyChanged("SoTK");
					this.OnSoTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNganHang", DbType="NVarChar(20)")]
		public string TenNganHang
		{
			get
			{
				return this._TenNganHang;
			}
			set
			{
				if ((this._TenNganHang != value))
				{
					this.OnTenNganHangChanging(value);
					this.SendPropertyChanging();
					this._TenNganHang = value;
					this.SendPropertyChanged("TenNganHang");
					this.OnTenNganHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_DatSP", Storage="_DatSPs", ThisKey="CMND", OtherKey="CMND")]
		public EntitySet<DatSP> DatSPs
		{
			get
			{
				return this._DatSPs;
			}
			set
			{
				this._DatSPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatSPs(DatSP entity)
		{
			this.SendPropertyChanging();
			entity.KHACH = this;
		}
		
		private void detach_DatSPs(DatSP entity)
		{
			this.SendPropertyChanging();
			entity.KHACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISP")]
	public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private System.Nullable<int> _SoLuongSP;
		
		private EntitySet<CTHopDong> _CTHopDongs;
		
		private EntitySet<DatSP> _DatSPs;
		
		private EntitySet<SP> _SPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    partial void OnSoLuongSPChanging(System.Nullable<int> value);
    partial void OnSoLuongSPChanged();
    #endregion
		
		public LOAISP()
		{
			this._CTHopDongs = new EntitySet<CTHopDong>(new Action<CTHopDong>(this.attach_CTHopDongs), new Action<CTHopDong>(this.detach_CTHopDongs));
			this._DatSPs = new EntitySet<DatSP>(new Action<DatSP>(this.attach_DatSPs), new Action<DatSP>(this.detach_DatSPs));
			this._SPs = new EntitySet<SP>(new Action<SP>(this.attach_SPs), new Action<SP>(this.detach_SPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(20)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSP", DbType="Int")]
		public System.Nullable<int> SoLuongSP
		{
			get
			{
				return this._SoLuongSP;
			}
			set
			{
				if ((this._SoLuongSP != value))
				{
					this.OnSoLuongSPChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSP = value;
					this.SendPropertyChanged("SoLuongSP");
					this.OnSoLuongSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CTHopDong", Storage="_CTHopDongs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<CTHopDong> CTHopDongs
		{
			get
			{
				return this._CTHopDongs;
			}
			set
			{
				this._CTHopDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_DatSP", Storage="_DatSPs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<DatSP> DatSPs
		{
			get
			{
				return this._DatSPs;
			}
			set
			{
				this._DatSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SP", Storage="_SPs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SP> SPs
		{
			get
			{
				return this._SPs;
			}
			set
			{
				this._SPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHopDongs(CTHopDong entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_CTHopDongs(CTHopDong entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_DatSPs(DatSP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_DatSPs(DatSP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SP")]
	public partial class SP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _MoTa;
		
		private string _TinhTrang;
		
		private string _MaLoaiSP;
		
		private System.DateTime _NgayVao;
		
		private string _SoHDTT;
		
		private System.DateTime _NgayRa;
		
		private EntityRef<LOAISP> _LOAISP;
		
		private EntityRef<SPVao> _SPVao;
		
		private EntityRef<HDTT> _HDTT;
		
		private EntityRef<SPRa> _SPRa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnNgayVaoChanging(System.DateTime value);
    partial void OnNgayVaoChanged();
    partial void OnSoHDTTChanging(string value);
    partial void OnSoHDTTChanged();
    partial void OnNgayRaChanging(System.DateTime value);
    partial void OnNgayRaChanged();
    #endregion
		
		public SP()
		{
			this._LOAISP = default(EntityRef<LOAISP>);
			this._SPVao = default(EntityRef<SPVao>);
			this._HDTT = default(EntityRef<HDTT>);
			this._SPRa = default(EntityRef<SPRa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVao", DbType="DateTime NOT NULL")]
		public System.DateTime NgayVao
		{
			get
			{
				return this._NgayVao;
			}
			set
			{
				if ((this._NgayVao != value))
				{
					if (this._SPVao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNgayVaoChanging(value);
					this.SendPropertyChanging();
					this._NgayVao = value;
					this.SendPropertyChanged("NgayVao");
					this.OnNgayVaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHDTT", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string SoHDTT
		{
			get
			{
				return this._SoHDTT;
			}
			set
			{
				if ((this._SoHDTT != value))
				{
					if (this._HDTT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDTTChanging(value);
					this.SendPropertyChanging();
					this._SoHDTT = value;
					this.SendPropertyChanged("SoHDTT");
					this.OnSoHDTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayRa", DbType="DateTime NOT NULL")]
		public System.DateTime NgayRa
		{
			get
			{
				return this._NgayRa;
			}
			set
			{
				if ((this._NgayRa != value))
				{
					if (this._SPRa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNgayRaChanging(value);
					this.SendPropertyChanging();
					this._NgayRa = value;
					this.SendPropertyChanged("NgayRa");
					this.OnNgayRaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SP", Storage="_LOAISP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.SPs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.SPs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPVao_SP", Storage="_SPVao", ThisKey="NgayVao", OtherKey="NgayVao", IsForeignKey=true)]
		public SPVao SPVao
		{
			get
			{
				return this._SPVao.Entity;
			}
			set
			{
				SPVao previousValue = this._SPVao.Entity;
				if (((previousValue != value) 
							|| (this._SPVao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPVao.Entity = null;
						previousValue.SPs.Remove(this);
					}
					this._SPVao.Entity = value;
					if ((value != null))
					{
						value.SPs.Add(this);
						this._NgayVao = value.NgayVao;
					}
					else
					{
						this._NgayVao = default(System.DateTime);
					}
					this.SendPropertyChanged("SPVao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDTT_SP", Storage="_HDTT", ThisKey="SoHDTT", OtherKey="SoHDTT", IsForeignKey=true)]
		public HDTT HDTT
		{
			get
			{
				return this._HDTT.Entity;
			}
			set
			{
				HDTT previousValue = this._HDTT.Entity;
				if (((previousValue != value) 
							|| (this._HDTT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDTT.Entity = null;
						previousValue.SPs.Remove(this);
					}
					this._HDTT.Entity = value;
					if ((value != null))
					{
						value.SPs.Add(this);
						this._SoHDTT = value.SoHDTT;
					}
					else
					{
						this._SoHDTT = default(string);
					}
					this.SendPropertyChanged("HDTT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPRa_SP", Storage="_SPRa", ThisKey="NgayRa", OtherKey="NgayRa", IsForeignKey=true)]
		public SPRa SPRa
		{
			get
			{
				return this._SPRa.Entity;
			}
			set
			{
				SPRa previousValue = this._SPRa.Entity;
				if (((previousValue != value) 
							|| (this._SPRa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPRa.Entity = null;
						previousValue.SPs.Remove(this);
					}
					this._SPRa.Entity = value;
					if ((value != null))
					{
						value.SPs.Add(this);
						this._NgayRa = value.NgayRa;
					}
					else
					{
						this._NgayRa = default(System.DateTime);
					}
					this.SendPropertyChanged("SPRa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPRa")]
	public partial class SPRa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayRa;
		
		private string _GhiChu;
		
		private EntitySet<SP> _SPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayRaChanging(System.DateTime value);
    partial void OnNgayRaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public SPRa()
		{
			this._SPs = new EntitySet<SP>(new Action<SP>(this.attach_SPs), new Action<SP>(this.detach_SPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayRa", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayRa
		{
			get
			{
				return this._NgayRa;
			}
			set
			{
				if ((this._NgayRa != value))
				{
					this.OnNgayRaChanging(value);
					this.SendPropertyChanging();
					this._NgayRa = value;
					this.SendPropertyChanged("NgayRa");
					this.OnNgayRaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(25)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPRa_SP", Storage="_SPs", ThisKey="NgayRa", OtherKey="NgayRa")]
		public EntitySet<SP> SPs
		{
			get
			{
				return this._SPs;
			}
			set
			{
				this._SPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.SPRa = this;
		}
		
		private void detach_SPs(SP entity)
		{
			this.SendPropertyChanging();
			entity.SPRa = null;
		}
	}
}
#pragma warning restore 1591
